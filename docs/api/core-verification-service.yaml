openapi: 3.1.0
x-stoplight:
  id: 4wr8ecqlisr5o
info:
  title: Core Verification Service
  version: '1.0'
  contact:
    name: Nils Codes
    url: 'https://vibrantnet.io'
    email: contact@vibrantnet.io
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  description: The API for the core verification service of the Cardano Blockchain announcement and notification application "Reach Your People"
servers:
  - url: 'http://localhost:8070'
    description: Local Build
tags:
  - name: verification
    description: Related to verification of subscriber and publisher accounts
paths:
  '/stake/{stakeAddress}/assetcounts':
    parameters:
      - $ref: '#/components/parameters/stakeAddress'
    get:
      summary: Get policy IDs and asset counts for a stake address
      tags: []
      responses:
        '200':
          description: A list of token policies and associated asset counts currently owned by the stake address
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenOwnershipInfoWithAssetCount'
      operationId: getMultiAssetCountForStakeAddress
      x-stoplight:
        id: 27yfis43nerv6
  '/stake/{stakeAddress}/pool':
    parameters:
      - $ref: '#/components/parameters/stakeAddress'
    get:
      summary: 'Get stake pool details for a given stake address, if currently staked'
      tags: []
      responses:
        '200':
          description: The stakepool details for this particular stake address
          content:
            application/json:
              schema:
                $ref: ./common-schemas.yaml#/components/schemas/StakepoolDetails
        '404':
          description: 'Not found if the stake address is not found or currently not delegated (it would be nice to separate those two cases by an error, but it is not currently possible)'
      operationId: getStakepoolDetailsForStakeAddress
  '/stake/{stakeAddress}/drep':
    parameters:
      - $ref: '#/components/parameters/stakeAddress'
    get:
      summary: 'Get dRep details for a given stake address, if currently delegated'
      tags: []
      responses:
        '200':
          description: The dRep details for this particular stake address
          content:
            application/json:
              schema:
                $ref: ./common-schemas.yaml#/components/schemas/DRepDetails
        '404':
          description: 'Not found if the stake address is not found or currently not delegated (it would be nice to separate those two cases by an error, but it is not currently possible)'
      operationId: getDrepDetailsForStakeAddress
      x-stoplight:
        id: lwsyrxe56cogv
  '/transactions/{transactionHash}/summary':
    parameters:
      - $ref: '#/components/parameters/transactionHash'
    get:
      summary: Get transaction summary
      tags: []
      operationId: getTransactionSummary
      responses:
        '200':
          description: 'The payment summary of this transaction, which includes output addresses and summarized amounts of transferred ADA/Lovelace'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSummary'
  '/pools/{poolHash}':
    parameters:
      - $ref: ./common-schemas.yaml#/components/parameters/poolHash
    get:
      summary: Get stakepool details
      tags: []
      operationId: getStakepoolDetails
      responses:
        '200':
          description: The stakepool details
          content:
            application/json:
              schema:
                $ref: ./common-schemas.yaml#/components/schemas/StakepoolDetails
      x-stoplight:
        id: p3haok6ogvyvu
  '/pools/{poolHash}/verifications':
    parameters:
      - $ref: ./common-schemas.yaml#/components/parameters/poolHash
    post:
      summary: Create a new verification flow for stake pool
      tags: []
      operationId: startStakepoolVerification
      responses:
        '201':
          description: The stakepool verification details to process
          headers:
            Location:
              schema:
                type: string
              description: Resource URL for the new verification flow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakepoolVerification'
      x-stoplight:
        id: ivcevnekbykhu
  '/pools/{poolHash}/verifications/{verificationNonce}':
    parameters:
      - $ref: ./common-schemas.yaml#/components/parameters/poolHash
      - $ref: '#/components/parameters/verificationNonce'
    post:
      summary: Test verification flow for stake pool
      tags: []
      operationId: testStakepoolVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StakepoolVerification'
      responses:
        '200':
          description: 'Confirmed stakepool verification, verification not persisted'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakepoolVerification'
        '404':
          description: Stakepool verification not found under this nonce and likely expired
        '409':
          description: Stakepool verification denied because of invalid signature or similar discrepancy
    put:
      summary: Complete verification flow for stake pool
      tags: []
      operationId: completeStakepoolVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StakepoolVerification'
      responses:
        '200':
          description: 'Confirmed stakepool verification, and verification persisted'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakepoolVerification'
        '404':
          description: Stakepool verification not found under this nonce and likely expired
        '409':
          description: Stakepool verification denied because of invalid signature or similar discrepancy
      x-stoplight:
        id: 43777830d67af
  '/dreps/{drepId}':
    parameters:
      - $ref: ./common-schemas.yaml#/components/parameters/drepId
    get:
      summary: Get dRep details
      tags: []
      operationId: getDRepDetails
      responses:
        '200':
          description: The dRep details
          content:
            application/json:
              schema:
                $ref: ./common-schemas.yaml#/components/schemas/DRepDetails
      x-stoplight:
        id: f0kpxnpfr0mzy
  '/cip66/{policyId}/{providerType}/{referenceId}':
    parameters:
      - $ref: ./common-schemas.yaml#/components/parameters/policyId
      - $ref: ./common-schemas.yaml#/components/parameters/providerType
      - $ref: ./common-schemas.yaml#/components/parameters/referenceId
    get:
      summary: Verify if given reference ID of provider is a valid CIP-0066 identity for the given policy ID
      tags: []
      operationId: verifyCip66
      responses:
        '200':
          description: 'A boolean indicating if the identity is confirmed, or if the identity is not confirmed or the policy is not a CIP-0066-enabled policy'
          content:
            application/json:
              schema:
                type: boolean
components:
  parameters:
    stakeAddress:
      name: stakeAddress
      in: path
      description: The staking address of a wallet in view format
      required: true
      style: simple
      schema:
        $ref: '#/components/schemas/StakeAddressView'
    transactionHash:
      name: transactionHash
      in: path
      description: The hash of the transaction
      required: true
      style: simple
      schema:
        $ref: '#/components/schemas/TransactionHash'
    verificationNonce:
      name: verificationNonce
      in: path
      description: The nonce to use in the verification flow
      required: true
      style: simple
      schema:
        type: string
        pattern: '^[a-fA-F0-9]{64}$'
  schemas:
    StakeAddressView:
      type: string
      description: 'The staking address of a wallet, in viewable format'
      example: stake1uyhvepgdsd7s07q5cdx9vdemnar4axpe0e9edw2chyd8dpgqnsffq
      pattern: '^stake1[a-zA-Z0-9]{53}$'
    TransactionHash:
      type: string
      description: The transaction hash in hex format
      example: 93b8936b5c9b5848fc5140eee293622b5d7c50f050f39ce1e6016d9780335c1d
      pattern: '^[a-zA-Z0-9]{64}$'
    TransactionSummary:
      type: object
      required:
        - transactionHash
        - outputs
      properties:
        transactionHash:
          $ref: '#/components/schemas/TransactionHash'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/TxOutputSummary'
    TxOutputSummary:
      type: object
      required:
        - address
        - lovelace
      properties:
        address:
          type: string
        lovelace:
          type: integer
          format: int64
      x-stoplight:
        id: 59f9d89bfc073
    TokenOwnershipInfoWithAssetCount:
      type: object
      required:
        - stakeAddress
        - policyId
        - assetCount
      properties:
        stakeAddress:
          $ref: '#/components/schemas/StakeAddressView'
        policyId:
          $ref: ./common-schemas.yaml#/components/schemas/TokenPolicyId
        assetCount:
          type: integer
          format: int64
    StakepoolVerification:
      title: StakepoolVerification
      required:
        - nonce
        - domain
        - poolHash
        - createTime
        - expirationTime
      x-stoplight:
        id: 83buzyj2s5kb0
      type: object
      properties:
        nonce:
          type: string
          x-stoplight:
            id: sayblhubnza8u
          pattern: '^[a-fA-F0-9]{64}$'
          readOnly: true
          description: The nonce to use in the CIP-0022 message to sign
        domain:
          type: string
          example: ryp.io
          description: The domain to use in the CIP-0022 message to sign
        poolHash:
          $ref: ./common-schemas.yaml#/components/schemas/StakepoolHash
          x-stoplight:
            id: h67xbsgbjwh0n
        vrfVerificationKey:
          type: object
          $ref: '#/components/schemas/VrfVerificationKey'
        signature:
          type: string
          description: The hex string containing the signed message
        createTime:
          type: string
          format: date-time
          example: '2021-11-10T13:20:57Z'
          readOnly: true
          x-stoplight:
            id: 28a32julufz59
        expirationTime:
          type: string
          format: date-time
          example: '2021-11-10T18:20:57Z'
          readOnly: true
          x-stoplight:
            id: hlk4gyetevd7x
    VrfVerificationKey:
      type: object
      description: 'The base64 encoded JSON object that is the content of your VRF verification key file. It should have three properties,'
      required:
        - type
        - description
        - cborHex
      properties:
        type:
          type: string
          example: VrfVerificationKey_PraosVRF
        description:
          type: string
          example: VRF Verification Key
        cborHex:
          type: string
          description: The CBOR hex string containing your VRF verification key
          pattern: '^5820[a-fA-F0-9]{64}$'
