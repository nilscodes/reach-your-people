include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - docker

spotbugs-sast:
  stage: test
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: always
    - when: never

variables:
  SAST_JAVA_VERSION: 17 # Use Java 17 for SAST since 21 is not yet available

gradle-build:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "core-verification/**/*"
        - "core-subscription/**/*"
        - "core-publishing/**/*"
        - "build.gradle.kts"
        - "settings.gradle.kts"
        - ".gitlab-ci.yml"

  image: gradle:jdk21-alpine

  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"

  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle

  stage: build
  script: gradle --build-cache build
  artifacts:
    paths:
      - core-verification/build/libs
      - core-verification/build/jacoco.xml
      - core-subscription/build/libs
      - core-subscription/build/jacoco.xml
      - core-publishing/build/libs
      - core-publishing/build/jacoco.xml
  cache:
    key: "$CI_JOB_NAME_SLUG"
    paths:
      - build
      - .gradle

core-verification-docker:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "core-verification/**/*"
        - "build.gradle.kts"
        - "settings.gradle.kts"
        - ".gitlab-ci.yml"
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd core-verification
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE/core-verification${tag}" .
    - docker push "$CI_REGISTRY_IMAGE/core-verification${tag}"

core-subscription-docker:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "core-subscription/**/*"
        - "build.gradle.kts"
        - "settings.gradle.kts"
        - ".gitlab-ci.yml"
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd core-subscription
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE/core-subscription${tag}" .
    - docker push "$CI_REGISTRY_IMAGE/core-subscription${tag}"

core-publishing-docker:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "core-publishing/**/*"
        - "build.gradle.kts"
        - "settings.gradle.kts"
        - ".gitlab-ci.yml"
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd core-publishing
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE/core-publishing${tag}" .
    - docker push "$CI_REGISTRY_IMAGE/core-publishing${tag}"
